{"ast":null,"code":"// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Navbar from './Navbar';\n// import MealList from \"./MealList\";\n// import axios from 'axios';\n// // import RecipeList from './reciepe';\n// import EnhancedRecipeList from './EnhancedRecipeList';\n// import CalorieSearch from './CalorieSearch';\n// import { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\n// function Ingredient() {\n//   const [ingredients, setIngredients] = useState('');\n//   const [recipes, setRecipes] = useState([]);\n// const fetchRecipes = async () => {\n//   const API_KEY = process.env.REACT_APP_API;\n//   const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\n//   try {\n//     const response = await axios.get(BASE_URL, {\n//       params: {\n//         apiKey: API_KEY,\n//         ingredients: ingredients,\n//         number: 3, // Number of recipes to fetch\n//       },\n//     });\n//     setRecipes(response.data);\n//   } catch (error) {\n//     console.error('Error fetching recipes:', error);\n//   }\n// };\n//   return (\n//           <div className=\"App\">\n//             <div className='container-title'>\n//                 <h1 className='main-title'>Heaven Of Spices</h1>\n//                 <p>A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish. It’s the\n//                 best place to find new recipes and cook delicious food.  </p>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"What's in your fridge?\"\n//                   value={ingredients}\n//                   onChange={(e) => setIngredients(e.target.value)}\n//                 />\n//                 <button onClick={fetchRecipes}>Find Recipes</button>\n//                 <div className='recipe-data'>\n//                 {/* <RecipeList recipeData={recipes} /> */}\n//                 <EnhancedRecipeList recipeData={recipes} />\n//                 </div>\n//             </div> \n//           </div>\n//   );\n// } \n// export default Ingredient;\n// // #offline - Fetch recipes from IndexedDB if offline\n// async function fetchRecipes(query) {\n//   try {\n//     const isOnline = navigator.onLine;\n//     if (isOnline) {\n//       const response = await axios.get('/api/recipes/summary');\n//       const recipes = response.data;\n//       await saveRecipes(recipes); // #offline - Save for offline use\n//       return recipes.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\n//     } else {\n//       console.warn('Offline. Fetching recipes from IndexedDB.');\n//       const offlineData = await getStoredRecipes();\n//       return offlineData.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\n//     }\n//   } catch (err) {\n//     console.error('Error fetching recipes:', err);\n//     return [];\n//   }\n// }\n// ingredient.js\n// ingredient.js\nimport React,{useState}from'react';import EnhancedRecipeList from'./EnhancedRecipeList';import axios from'axios';import{saveRecipes,getStoredRecipes}from'./indexedDB';// #offline\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Ingredient(){const[ingredients,setIngredients]=useState('');const[recipes,setRecipes]=useState([]);const fetchRecipes=async()=>{const API_KEY=process.env.REACT_APP_API;const BASE_URL='https://api.spoonacular.com/recipes/findByIngredients';const isOnline=navigator.onLine;try{if(isOnline){console.log('[Online] Fetching from API...');const response=await axios.get(BASE_URL,{params:{apiKey:API_KEY,ingredients:ingredients,number:5}});// Add _id key for IndexedDB\nconst fetched=response.data.map(r=>({...r,_id:r.id}));setRecipes(fetched);await saveRecipes(fetched);// ✅ Save to IndexedDB\nconsole.log('[Online] Recipes saved to IndexedDB ✅');}else{console.warn('[Offline] Trying IndexedDB...');const stored=await getStoredRecipes();const filtered=stored.filter(r=>r.title.toLowerCase().includes(ingredients.toLowerCase()));setRecipes(filtered);console.log('[Offline] Loaded from IndexedDB:',filtered);}}catch(error){console.error('Error fetching recipes:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-title\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"main-title\",children:\"Heaven Of Spices\"}),/*#__PURE__*/_jsx(\"p\",{children:\"A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"What's in your fridge?\",value:ingredients,onChange:e=>setIngredients(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchRecipes,children:\"Find Recipes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-data\",children:/*#__PURE__*/_jsx(EnhancedRecipeList,{recipeData:recipes})})]})});}export default Ingredient;","map":{"version":3,"names":["React","useState","EnhancedRecipeList","axios","saveRecipes","getStoredRecipes","jsx","_jsx","jsxs","_jsxs","Ingredient","ingredients","setIngredients","recipes","setRecipes","fetchRecipes","API_KEY","process","env","REACT_APP_API","BASE_URL","isOnline","navigator","onLine","console","log","response","get","params","apiKey","number","fetched","data","map","r","_id","id","warn","stored","filtered","filter","title","toLowerCase","includes","error","className","children","type","placeholder","value","onChange","e","target","onClick","recipeData"],"sources":["C:/Users/DELL/OneDrive/Desktop/MS USA/IIT Chicago/Build Fellowship Project 1 Real time feature/a-cookbook/client/src/ingredient.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// import Navbar from './Navbar';\r\n// import MealList from \"./MealList\";\r\n// import axios from 'axios';\r\n// // import RecipeList from './reciepe';\r\n// import EnhancedRecipeList from './EnhancedRecipeList';\r\n// import CalorieSearch from './CalorieSearch';\r\n// import { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\r\n\r\n\r\n\r\n// function Ingredient() {\r\n//   const [ingredients, setIngredients] = useState('');\r\n//   const [recipes, setRecipes] = useState([]);\r\n\r\n// const fetchRecipes = async () => {\r\n//   const API_KEY = process.env.REACT_APP_API;\r\n//   const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\r\n\r\n//   try {\r\n//     const response = await axios.get(BASE_URL, {\r\n//       params: {\r\n//         apiKey: API_KEY,\r\n//         ingredients: ingredients,\r\n//         number: 3, // Number of recipes to fetch\r\n//       },\r\n//     });\r\n//     setRecipes(response.data);\r\n//   } catch (error) {\r\n//     console.error('Error fetching recipes:', error);\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//           <div className=\"App\">\r\n//             <div className='container-title'>\r\n//                 <h1 className='main-title'>Heaven Of Spices</h1>\r\n//                 <p>A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish. It’s the\r\n//                 best place to find new recipes and cook delicious food.  </p>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"What's in your fridge?\"\r\n//                   value={ingredients}\r\n//                   onChange={(e) => setIngredients(e.target.value)}\r\n//                 />\r\n//                 <button onClick={fetchRecipes}>Find Recipes</button>\r\n//                 <div className='recipe-data'>\r\n//                 {/* <RecipeList recipeData={recipes} /> */}\r\n//                 <EnhancedRecipeList recipeData={recipes} />\r\n//                 </div>\r\n//             </div> \r\n//           </div>\r\n//   );\r\n// } \r\n\r\n// export default Ingredient;\r\n\r\n// // #offline - Fetch recipes from IndexedDB if offline\r\n// async function fetchRecipes(query) {\r\n//   try {\r\n//     const isOnline = navigator.onLine;\r\n//     if (isOnline) {\r\n//       const response = await axios.get('/api/recipes/summary');\r\n//       const recipes = response.data;\r\n//       await saveRecipes(recipes); // #offline - Save for offline use\r\n//       return recipes.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\r\n//     } else {\r\n//       console.warn('Offline. Fetching recipes from IndexedDB.');\r\n//       const offlineData = await getStoredRecipes();\r\n//       return offlineData.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\r\n//     }\r\n//   } catch (err) {\r\n//     console.error('Error fetching recipes:', err);\r\n//     return [];\r\n//   }\r\n// }\r\n\r\n// ingredient.js\r\n\r\n// ingredient.js\r\n\r\nimport React, { useState } from 'react';\r\nimport EnhancedRecipeList from './EnhancedRecipeList';\r\nimport axios from 'axios';\r\nimport { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\r\n\r\nfunction Ingredient() {\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  const fetchRecipes = async () => {\r\n    const API_KEY = process.env.REACT_APP_API;\r\n    const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\r\n    const isOnline = navigator.onLine;\r\n\r\n    try {\r\n      if (isOnline) {\r\n        console.log('[Online] Fetching from API...');\r\n        const response = await axios.get(BASE_URL, {\r\n          params: {\r\n            apiKey: API_KEY,\r\n            ingredients: ingredients,\r\n            number: 5,\r\n          },\r\n        });\r\n\r\n        // Add _id key for IndexedDB\r\n        const fetched = response.data.map(r => ({ ...r, _id: r.id }));\r\n\r\n        setRecipes(fetched);\r\n        await saveRecipes(fetched); // ✅ Save to IndexedDB\r\n        console.log('[Online] Recipes saved to IndexedDB ✅');\r\n      } else {\r\n        console.warn('[Offline] Trying IndexedDB...');\r\n        const stored = await getStoredRecipes();\r\n        const filtered = stored.filter((r) =>\r\n          r.title.toLowerCase().includes(ingredients.toLowerCase())\r\n        );\r\n        setRecipes(filtered);\r\n        console.log('[Offline] Loaded from IndexedDB:', filtered);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching recipes:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container-title\">\r\n        <h1 className=\"main-title\">Heaven Of Spices</h1>\r\n        <p>\r\n          A CookBook : Heaven Of Spices helps you cook the perfect dish. You\r\n          can easily search the perfect combination of ingredients to make your\r\n          desired dish.\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's in your fridge?\"\r\n          value={ingredients}\r\n          onChange={(e) => setIngredients(e.target.value)}\r\n        />\r\n        <button onClick={fetchRecipes}>Find Recipes</button>\r\n        <div className=\"recipe-data\">\r\n          <EnhancedRecipeList recipeData={recipes} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ingredient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}