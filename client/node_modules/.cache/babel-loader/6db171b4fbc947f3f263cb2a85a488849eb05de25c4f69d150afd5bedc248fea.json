{"ast":null,"code":"// // // reciepe.js\n// import React from 'react';\n// // RecipeList Component\n// export default function RecipeList({ recipeData }) {\n//   // if (!recipeData || recipeData.length === 0) {\n//   //   return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\n//   // }\n//   return (\n//     <div className='meal-card'>\n//       <ul className = 'instructions recipe-container'>\n//         {recipeData.map((recipe, index) => (\n//           <li key={index} className='recipe-item'>\n//             <h3 className='recipe-title'>{recipe.title}</h3>\n//             <img \n//               src={recipe.image} \n//               alt={recipe.title} \n//               className='recipe-image'\n//             //   style={{ width: '200px', borderRadius: '10px' }} \n//             />\n//             <ul className='recipe-details'>\n//               <li>Used Ingredients: {recipe.usedIngredientCount}</li>\n//               <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\n//               <li className='button-container'> \n//                   <a\n//                   href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \n//                   target=\"_blank\" \n//                   rel=\"noopener noreferrer\"\n//                   className='recipe-link'\n//                   > \n//                   View Full Recipe\n//                   </a>\n//               </li>\n//             </ul>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function RecipeList(_ref){let{recipeData}=_ref;// State to manage comments for each recipe\nconst[comments,setComments]=useState({});// State to manage comment inputs\nconst[commentInputs,setCommentInputs]=useState({});// Effect to initialize comment inputs for each recipe\nuseEffect(()=>{if(recipeData){const initialInputs={};recipeData.forEach(recipe=>{initialInputs[recipe.id]='';});setCommentInputs(initialInputs);}},[recipeData]);// Function to handle comment posting\nconst handleCommentPost=(recipeId,event)=>{// Prevent default form submission\nif(event){event.preventDefault();}// Get the comment text\nconst commentText=commentInputs[recipeId];console.log('Attempting to post comment:',{recipeId,commentText,currentComments:comments[recipeId]});// Validate comment\nif(!commentText||!commentText.trim()){console.warn('Empty comment, cannot post');return;}// Create new comment object\nconst newComment={id:Date.now(),text:commentText,timestamp:new Date().toLocaleString()};// Update comments state\nsetComments(prevComments=>{const updatedComments={...prevComments,[recipeId]:[...(prevComments[recipeId]||[]),newComment]};console.log('Updated comments:',updatedComments);return updatedComments;});// Clear the input for this recipe\nsetCommentInputs(prevInputs=>({...prevInputs,[recipeId]:''}));// Manually show comments and update button text\nconst commentsContainer=document.querySelector(`.comments-container-${recipeId}`);const toggleButton=document.querySelector(`.toggle-comments-btn-${recipeId}`);if(commentsContainer){commentsContainer.style.display='block';if(toggleButton){toggleButton.textContent='Hide Comments';}}};// Function to toggle comment visibility\nconst toggleComments=recipeId=>{const commentsContainer=document.querySelector(`.comments-container-${recipeId}`);const toggleButton=document.querySelector(`.toggle-comments-btn-${recipeId}`);if(!commentsContainer||!toggleButton){console.warn('Comments container or toggle button not found');return;}const currentDisplay=commentsContainer.style.display;const recipeCommentsCount=(comments[recipeId]||[]).length;if(currentDisplay==='none'){commentsContainer.style.display='block';toggleButton.textContent='Hide Comments';}else{commentsContainer.style.display='none';toggleButton.textContent=`Show Comments (${recipeCommentsCount})`;}};if(!recipeData||recipeData.length===0){return/*#__PURE__*/_jsx(\"h3\",{className:\"no-recipe\",children:\"No recipes found. Try adding more ingredients!\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"meal-card\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"instructions recipe-container\",children:recipeData.map((recipe,index)=>{const recipeComments=comments[recipe.id]||[];return/*#__PURE__*/_jsxs(\"li\",{className:\"recipe-item\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"recipe-title\",children:recipe.title}),/*#__PURE__*/_jsx(\"img\",{src:recipe.image,alt:recipe.title,className:\"recipe-image\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Rate this recipe:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"star-rating\",children:[1,2,3,4,5].map(star=>/*#__PURE__*/_jsx(\"div\",{role:\"button\",style:{display:'inline-block',width:'30px',height:'30px',backgroundColor:'#ddd',margin:'0 2px',cursor:'pointer'}},star))}),/*#__PURE__*/_jsx(\"p\",{children:\"No ratings yet\"})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"recipe-details\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Used Ingredients: \",recipe.usedIngredientCount]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Missed Ingredients: \",recipe.missedIngredientCount]}),/*#__PURE__*/_jsx(\"li\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"a\",{href:`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"recipe-link\",children:\"View Full Recipe\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-comments-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:`toggle-comments-btn-${recipe.id}`,onClick:()=>toggleComments(recipe.id),style:{width:'100%',padding:'10px',backgroundColor:'#f0f0f0',border:'none',marginBottom:'10px'},children:\"Show Comments (0)\"}),/*#__PURE__*/_jsxs(\"div\",{className:`comments-container-${recipe.id}`,style:{display:'none'},children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{handleCommentPost(recipe.id,e);},style:{display:'flex',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Best!!\",value:commentInputs[recipe.id]||'',onChange:e=>{console.log('Input changed:',e.target.value);setCommentInputs(prev=>({...prev,[recipe.id]:e.target.value}));},style:{flex:1,padding:'10px',marginRight:'10px'}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{padding:'10px',backgroundColor:'#4CAF50',color:'white',border:'none'},children:\"Post\"})]}),/*#__PURE__*/_jsx(\"div\",{children:recipeComments.length>0?recipeComments.map(comment=>/*#__PURE__*/_jsx(\"div\",{style:{border:'1px solid #e0e0e0',padding:'10px',marginBottom:'5px',borderRadius:'4px'},children:/*#__PURE__*/_jsx(\"p\",{children:comment.text})},comment.id)):/*#__PURE__*/_jsx(\"p\",{className:\"no-comments\",style:{textAlign:'center',color:'#888'},children:\"No comments yet. Be the first to comment!\"})})]})]})]},index);})})});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","RecipeList","_ref","recipeData","comments","setComments","commentInputs","setCommentInputs","initialInputs","forEach","recipe","id","handleCommentPost","recipeId","event","preventDefault","commentText","console","log","currentComments","trim","warn","newComment","Date","now","text","timestamp","toLocaleString","prevComments","updatedComments","prevInputs","commentsContainer","document","querySelector","toggleButton","style","display","textContent","toggleComments","currentDisplay","recipeCommentsCount","length","className","children","map","index","recipeComments","title","src","image","alt","star","role","width","height","backgroundColor","margin","cursor","usedIngredientCount","missedIngredientCount","href","target","rel","onClick","padding","border","marginBottom","onSubmit","e","type","placeholder","value","onChange","prev","flex","marginRight","color","comment","borderRadius","textAlign"],"sources":["C:/Users/DELL/OneDrive/Desktop/MS USA/IIT Chicago/Build Fellowship Project 1 Real time feature/a-cookbook/client/src/reciepe.js"],"sourcesContent":["// // // reciepe.js\r\n// import React from 'react';\r\n\r\n// // RecipeList Component\r\n// export default function RecipeList({ recipeData }) {\r\n//   // if (!recipeData || recipeData.length === 0) {\r\n//   //   return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\r\n//   // }\r\n\r\n//   return (\r\n//     <div className='meal-card'>\r\n//       <ul className = 'instructions recipe-container'>\r\n//         {recipeData.map((recipe, index) => (\r\n//           <li key={index} className='recipe-item'>\r\n//             <h3 className='recipe-title'>{recipe.title}</h3>\r\n//             <img \r\n//               src={recipe.image} \r\n//               alt={recipe.title} \r\n//               className='recipe-image'\r\n//             //   style={{ width: '200px', borderRadius: '10px' }} \r\n//             />\r\n//             <ul className='recipe-details'>\r\n//               <li>Used Ingredients: {recipe.usedIngredientCount}</li>\r\n//               <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\r\n//               <li className='button-container'> \r\n//                   <a\r\n//                   href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \r\n//                   target=\"_blank\" \r\n//                   rel=\"noopener noreferrer\"\r\n//                   className='recipe-link'\r\n//                   > \r\n//                   View Full Recipe\r\n//                   </a>\r\n//               </li>\r\n//             </ul>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function RecipeList({ recipeData }) {\r\n  // State to manage comments for each recipe\r\n  const [comments, setComments] = useState({});\r\n  \r\n  // State to manage comment inputs\r\n  const [commentInputs, setCommentInputs] = useState({});\r\n\r\n  // Effect to initialize comment inputs for each recipe\r\n  useEffect(() => {\r\n    if (recipeData) {\r\n      const initialInputs = {};\r\n      recipeData.forEach(recipe => {\r\n        initialInputs[recipe.id] = '';\r\n      });\r\n      setCommentInputs(initialInputs);\r\n    }\r\n  }, [recipeData]);\r\n\r\n  // Function to handle comment posting\r\n  const handleCommentPost = (recipeId, event) => {\r\n    // Prevent default form submission\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Get the comment text\r\n    const commentText = commentInputs[recipeId];\r\n    \r\n    console.log('Attempting to post comment:', {\r\n      recipeId,\r\n      commentText,\r\n      currentComments: comments[recipeId]\r\n    });\r\n\r\n    // Validate comment\r\n    if (!commentText || !commentText.trim()) {\r\n      console.warn('Empty comment, cannot post');\r\n      return;\r\n    }\r\n\r\n    // Create new comment object\r\n    const newComment = {\r\n      id: Date.now(),\r\n      text: commentText,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n\r\n    // Update comments state\r\n    setComments(prevComments => {\r\n      const updatedComments = {\r\n        ...prevComments,\r\n        [recipeId]: [...(prevComments[recipeId] || []), newComment]\r\n      };\r\n      \r\n      console.log('Updated comments:', updatedComments);\r\n      \r\n      return updatedComments;\r\n    });\r\n\r\n    // Clear the input for this recipe\r\n    setCommentInputs(prevInputs => ({\r\n      ...prevInputs,\r\n      [recipeId]: ''\r\n    }));\r\n\r\n    // Manually show comments and update button text\r\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\r\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\r\n    \r\n    if (commentsContainer) {\r\n      commentsContainer.style.display = 'block';\r\n      if (toggleButton) {\r\n        toggleButton.textContent = 'Hide Comments';\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to toggle comment visibility\r\n  const toggleComments = (recipeId) => {\r\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\r\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\r\n    \r\n    if (!commentsContainer || !toggleButton) {\r\n      console.warn('Comments container or toggle button not found');\r\n      return;\r\n    }\r\n\r\n    const currentDisplay = commentsContainer.style.display;\r\n    const recipeCommentsCount = (comments[recipeId] || []).length;\r\n\r\n    if (currentDisplay === 'none') {\r\n      commentsContainer.style.display = 'block';\r\n      toggleButton.textContent = 'Hide Comments';\r\n    } else {\r\n      commentsContainer.style.display = 'none';\r\n      toggleButton.textContent = `Show Comments (${recipeCommentsCount})`;\r\n    }\r\n  };\r\n\r\n  if (!recipeData || recipeData.length === 0) {\r\n    return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\r\n  }\r\n\r\n  return (\r\n    <div className='meal-card'>\r\n      <ul className='instructions recipe-container'>\r\n        {recipeData.map((recipe, index) => {\r\n          const recipeComments = comments[recipe.id] || [];\r\n\r\n          return (\r\n            <li key={index} className='recipe-item'>\r\n              <h3 className='recipe-title'>{recipe.title}</h3>\r\n              <img \r\n                src={recipe.image} \r\n                alt={recipe.title} \r\n                className='recipe-image'\r\n              />\r\n              \r\n              <div>\r\n                <p>Rate this recipe:</p>\r\n                <div className=\"star-rating\">\r\n                  {[1, 2, 3, 4, 5].map((star) => (\r\n                    <div \r\n                      key={star} \r\n                      role=\"button\"\r\n                      style={{\r\n                        display: 'inline-block',\r\n                        width: '30px',\r\n                        height: '30px',\r\n                        backgroundColor: '#ddd',\r\n                        margin: '0 2px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <p>No ratings yet</p>\r\n              </div>\r\n              \r\n              <ul className='recipe-details'>\r\n                <li>Used Ingredients: {recipe.usedIngredientCount}</li>\r\n                <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\r\n                <li className='button-container'> \r\n                  <a\r\n                    href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className='recipe-link'\r\n                  > \r\n                    View Full Recipe\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              \r\n              <div className=\"recipe-comments-section\">\r\n                <button \r\n                  className={`toggle-comments-btn-${recipe.id}`}\r\n                  onClick={() => toggleComments(recipe.id)}\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '10px',\r\n                    backgroundColor: '#f0f0f0',\r\n                    border: 'none',\r\n                    marginBottom: '10px'\r\n                  }}\r\n                >\r\n                  Show Comments (0)\r\n                </button>\r\n                \r\n                <div \r\n                  className={`comments-container-${recipe.id}`}\r\n                  style={{ display: 'none' }}\r\n                >\r\n                  <form \r\n                    onSubmit={(e) => {\r\n                      handleCommentPost(recipe.id, e);\r\n                    }}\r\n                    style={{\r\n                      display: 'flex',\r\n                      marginBottom: '10px'\r\n                    }}\r\n                  >\r\n                    <input \r\n                      type=\"text\" \r\n                      placeholder=\"Best!!\" \r\n                      value={commentInputs[recipe.id] || ''}\r\n                      onChange={(e) => {\r\n                        console.log('Input changed:', e.target.value);\r\n                        setCommentInputs(prev => ({\r\n                          ...prev,\r\n                          [recipe.id]: e.target.value\r\n                        }));\r\n                      }}\r\n                      style={{\r\n                        flex: 1,\r\n                        padding: '10px',\r\n                        marginRight: '10px'\r\n                      }}\r\n                    />\r\n                    <button \r\n                      type=\"submit\"\r\n                      style={{\r\n                        padding: '10px',\r\n                        backgroundColor: '#4CAF50',\r\n                        color: 'white',\r\n                        border: 'none'\r\n                      }}\r\n                    >\r\n                      Post\r\n                    </button>\r\n                  </form>\r\n                  \r\n                  <div>\r\n                    {recipeComments.length > 0 ? (\r\n                      recipeComments.map((comment) => (\r\n                        <div \r\n                          key={comment.id} \r\n                          style={{\r\n                            border: '1px solid #e0e0e0',\r\n                            padding: '10px',\r\n                            marginBottom: '5px',\r\n                            borderRadius: '4px'\r\n                          }}\r\n                        >\r\n                          <p>{comment.text}</p>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p \r\n                        className=\"no-comments\"\r\n                        style={{ \r\n                          textAlign: 'center', \r\n                          color: '#888' \r\n                        }}\r\n                      >\r\n                        No comments yet. Be the first to comment!\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}