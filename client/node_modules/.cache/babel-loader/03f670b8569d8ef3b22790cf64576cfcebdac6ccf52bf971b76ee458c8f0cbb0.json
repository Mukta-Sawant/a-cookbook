{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\MS USA\\\\IIT Chicago\\\\Build Fellowship Project 1 Real time feature\\\\a-cookbook\\\\client\\\\src\\\\ingredient.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Navbar from './Navbar';\n// import MealList from \"./MealList\";\n// import axios from 'axios';\n// // import RecipeList from './reciepe';\n// import EnhancedRecipeList from './EnhancedRecipeList';\n// import CalorieSearch from './CalorieSearch';\n// import { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\n\n// function Ingredient() {\n//   const [ingredients, setIngredients] = useState('');\n//   const [recipes, setRecipes] = useState([]);\n\n// const fetchRecipes = async () => {\n//   const API_KEY = process.env.REACT_APP_API;\n//   const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\n\n//   try {\n//     const response = await axios.get(BASE_URL, {\n//       params: {\n//         apiKey: API_KEY,\n//         ingredients: ingredients,\n//         number: 3, // Number of recipes to fetch\n//       },\n//     });\n//     setRecipes(response.data);\n//   } catch (error) {\n//     console.error('Error fetching recipes:', error);\n//   }\n// };\n\n//   return (\n//           <div className=\"App\">\n//             <div className='container-title'>\n//                 <h1 className='main-title'>Heaven Of Spices</h1>\n//                 <p>A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish. It’s the\n//                 best place to find new recipes and cook delicious food.  </p>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"What's in your fridge?\"\n//                   value={ingredients}\n//                   onChange={(e) => setIngredients(e.target.value)}\n//                 />\n//                 <button onClick={fetchRecipes}>Find Recipes</button>\n//                 <div className='recipe-data'>\n//                 {/* <RecipeList recipeData={recipes} /> */}\n//                 <EnhancedRecipeList recipeData={recipes} />\n//                 </div>\n//             </div> \n//           </div>\n//   );\n// } \n\n// export default Ingredient;\n\n// // #offline - Fetch recipes from IndexedDB if offline\n// async function fetchRecipes(query) {\n//   try {\n//     const isOnline = navigator.onLine;\n//     if (isOnline) {\n//       const response = await axios.get('/api/recipes/summary');\n//       const recipes = response.data;\n//       await saveRecipes(recipes); // #offline - Save for offline use\n//       return recipes.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\n//     } else {\n//       console.warn('Offline. Fetching recipes from IndexedDB.');\n//       const offlineData = await getStoredRecipes();\n//       return offlineData.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\n//     }\n//   } catch (err) {\n//     console.error('Error fetching recipes:', err);\n//     return [];\n//   }\n// }\n\n// ingredient.js\n\nimport React, { useState } from 'react';\nimport EnhancedRecipeList from './EnhancedRecipeList';\nimport axios from 'axios';\nimport { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ingredient() {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const fetchRecipes = async () => {\n    const API_KEY = process.env.REACT_APP_API;\n    const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\n    const isOnline = navigator.onLine;\n    try {\n      if (isOnline) {\n        console.log('[Online] Fetching from API...');\n        const response = await axios.get(BASE_URL, {\n          params: {\n            apiKey: API_KEY,\n            ingredients: ingredients,\n            number: 5\n          }\n        });\n\n        // Add _id key for IndexedDB\n        const fetched = response.data.map(r => ({\n          ...r,\n          _id: r.id\n        }));\n        setRecipes(fetched);\n        await saveRecipes(fetched); // ✅ Save to IndexedDB\n        console.log('[Online] Recipes saved to IndexedDB ✅');\n      } else {\n        console.warn('[Offline] Trying IndexedDB...');\n        const stored = await getStoredRecipes();\n        const filtered = stored.filter(r => r.title.toLowerCase().includes(ingredients.toLowerCase()));\n        setRecipes(filtered);\n        console.log('[Offline] Loaded from IndexedDB:', filtered);\n      }\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Heaven Of Spices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's in your fridge?\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRecipes,\n        children: \"Find Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-data\",\n        children: /*#__PURE__*/_jsxDEV(EnhancedRecipeList, {\n          recipeData: recipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Ingredient, \"pZbyDrdPpumVMNR/PIi3M0qo4PQ=\");\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","useState","EnhancedRecipeList","axios","saveRecipes","getStoredRecipes","jsxDEV","_jsxDEV","Ingredient","_s","ingredients","setIngredients","recipes","setRecipes","fetchRecipes","API_KEY","process","env","REACT_APP_API","BASE_URL","isOnline","navigator","onLine","console","log","response","get","params","apiKey","number","fetched","data","map","r","_id","id","warn","stored","filtered","filter","title","toLowerCase","includes","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","recipeData","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/MS USA/IIT Chicago/Build Fellowship Project 1 Real time feature/a-cookbook/client/src/ingredient.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// import Navbar from './Navbar';\r\n// import MealList from \"./MealList\";\r\n// import axios from 'axios';\r\n// // import RecipeList from './reciepe';\r\n// import EnhancedRecipeList from './EnhancedRecipeList';\r\n// import CalorieSearch from './CalorieSearch';\r\n// import { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\r\n\r\n\r\n\r\n// function Ingredient() {\r\n//   const [ingredients, setIngredients] = useState('');\r\n//   const [recipes, setRecipes] = useState([]);\r\n\r\n// const fetchRecipes = async () => {\r\n//   const API_KEY = process.env.REACT_APP_API;\r\n//   const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\r\n\r\n//   try {\r\n//     const response = await axios.get(BASE_URL, {\r\n//       params: {\r\n//         apiKey: API_KEY,\r\n//         ingredients: ingredients,\r\n//         number: 3, // Number of recipes to fetch\r\n//       },\r\n//     });\r\n//     setRecipes(response.data);\r\n//   } catch (error) {\r\n//     console.error('Error fetching recipes:', error);\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//           <div className=\"App\">\r\n//             <div className='container-title'>\r\n//                 <h1 className='main-title'>Heaven Of Spices</h1>\r\n//                 <p>A CookBook : Heaven Of Spices helps you cook the perfect dish. You can easily search the perfect combination of ingredients to make your desired dish. It’s the\r\n//                 best place to find new recipes and cook delicious food.  </p>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"What's in your fridge?\"\r\n//                   value={ingredients}\r\n//                   onChange={(e) => setIngredients(e.target.value)}\r\n//                 />\r\n//                 <button onClick={fetchRecipes}>Find Recipes</button>\r\n//                 <div className='recipe-data'>\r\n//                 {/* <RecipeList recipeData={recipes} /> */}\r\n//                 <EnhancedRecipeList recipeData={recipes} />\r\n//                 </div>\r\n//             </div> \r\n//           </div>\r\n//   );\r\n// } \r\n\r\n// export default Ingredient;\r\n\r\n// // #offline - Fetch recipes from IndexedDB if offline\r\n// async function fetchRecipes(query) {\r\n//   try {\r\n//     const isOnline = navigator.onLine;\r\n//     if (isOnline) {\r\n//       const response = await axios.get('/api/recipes/summary');\r\n//       const recipes = response.data;\r\n//       await saveRecipes(recipes); // #offline - Save for offline use\r\n//       return recipes.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\r\n//     } else {\r\n//       console.warn('Offline. Fetching recipes from IndexedDB.');\r\n//       const offlineData = await getStoredRecipes();\r\n//       return offlineData.filter(r => r.title.toLowerCase().includes(query.toLowerCase()));\r\n//     }\r\n//   } catch (err) {\r\n//     console.error('Error fetching recipes:', err);\r\n//     return [];\r\n//   }\r\n// }\r\n\r\n// ingredient.js\r\n\r\nimport React, { useState } from 'react';\r\nimport EnhancedRecipeList from './EnhancedRecipeList';\r\nimport axios from 'axios';\r\nimport { saveRecipes, getStoredRecipes } from './indexedDB'; // #offline\r\n\r\nfunction Ingredient() {\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  const fetchRecipes = async () => {\r\n    const API_KEY = process.env.REACT_APP_API;\r\n    const BASE_URL = 'https://api.spoonacular.com/recipes/findByIngredients';\r\n    const isOnline = navigator.onLine;\r\n\r\n    try {\r\n      if (isOnline) {\r\n        console.log('[Online] Fetching from API...');\r\n        const response = await axios.get(BASE_URL, {\r\n          params: {\r\n            apiKey: API_KEY,\r\n            ingredients: ingredients,\r\n            number: 5,\r\n          },\r\n        });\r\n\r\n        // Add _id key for IndexedDB\r\n        const fetched = response.data.map(r => ({ ...r, _id: r.id }));\r\n\r\n        setRecipes(fetched);\r\n        await saveRecipes(fetched); // ✅ Save to IndexedDB\r\n        console.log('[Online] Recipes saved to IndexedDB ✅');\r\n      } else {\r\n        console.warn('[Offline] Trying IndexedDB...');\r\n        const stored = await getStoredRecipes();\r\n        const filtered = stored.filter((r) =>\r\n          r.title.toLowerCase().includes(ingredients.toLowerCase())\r\n        );\r\n        setRecipes(filtered);\r\n        console.log('[Offline] Loaded from IndexedDB:', filtered);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching recipes:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container-title\">\r\n        <h1 className=\"main-title\">Heaven Of Spices</h1>\r\n        <p>\r\n          A CookBook : Heaven Of Spices helps you cook the perfect dish. You\r\n          can easily search the perfect combination of ingredients to make your\r\n          desired dish.\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's in your fridge?\"\r\n          value={ingredients}\r\n          onChange={(e) => setIngredients(e.target.value)}\r\n        />\r\n        <button onClick={fetchRecipes}>Find Recipes</button>\r\n        <div className=\"recipe-data\">\r\n          <EnhancedRecipeList recipeData={recipes} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ingredient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}