{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\MS USA\\\\IIT Chicago\\\\Build Fellowship Project 1 Real time feature\\\\a-cookbook\\\\client\\\\src\\\\reciepe.js\",\n  _s = $RefreshSig$();\n// // // reciepe.js\n// import React from 'react';\n\n// // RecipeList Component\n// export default function RecipeList({ recipeData }) {\n//   // if (!recipeData || recipeData.length === 0) {\n//   //   return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\n//   // }\n\n//   return (\n//     <div className='meal-card'>\n//       <ul className = 'instructions recipe-container'>\n//         {recipeData.map((recipe, index) => (\n//           <li key={index} className='recipe-item'>\n//             <h3 className='recipe-title'>{recipe.title}</h3>\n//             <img \n//               src={recipe.image} \n//               alt={recipe.title} \n//               className='recipe-image'\n//             //   style={{ width: '200px', borderRadius: '10px' }} \n//             />\n//             <ul className='recipe-details'>\n//               <li>Used Ingredients: {recipe.usedIngredientCount}</li>\n//               <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\n//               <li className='button-container'> \n//                   <a\n//                   href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \n//                   target=\"_blank\" \n//                   rel=\"noopener noreferrer\"\n//                   className='recipe-link'\n//                   > \n//                   View Full Recipe\n//                   </a>\n//               </li>\n//             </ul>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeList({\n  recipeData\n}) {\n  _s();\n  // State to manage comments for each recipe\n  const [comments, setComments] = useState({});\n\n  // State to manage comment inputs\n  const [commentInputs, setCommentInputs] = useState({});\n\n  // Effect to initialize comment inputs for each recipe\n  useEffect(() => {\n    if (recipeData) {\n      const initialInputs = {};\n      recipeData.forEach(recipe => {\n        initialInputs[recipe.id] = '';\n      });\n      setCommentInputs(initialInputs);\n    }\n  }, [recipeData]);\n\n  // Function to handle comment posting\n  const handleCommentPost = (recipeId, event) => {\n    // Prevent default form submission\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Get the comment text\n    const commentText = commentInputs[recipeId];\n    console.log('Attempting to post comment:', {\n      recipeId,\n      commentText,\n      currentComments: comments[recipeId]\n    });\n\n    // Validate comment\n    if (!commentText || !commentText.trim()) {\n      console.warn('Empty comment, cannot post');\n      return;\n    }\n\n    // Create new comment object\n    const newComment = {\n      id: Date.now(),\n      text: commentText,\n      timestamp: new Date().toLocaleString()\n    };\n\n    // Update comments state\n    setComments(prevComments => {\n      const updatedComments = {\n        ...prevComments,\n        [recipeId]: [...(prevComments[recipeId] || []), newComment]\n      };\n      console.log('Updated comments:', updatedComments);\n      return updatedComments;\n    });\n\n    // Clear the input for this recipe\n    setCommentInputs(prevInputs => ({\n      ...prevInputs,\n      [recipeId]: ''\n    }));\n\n    // Manually show comments and update button text\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\n    if (commentsContainer) {\n      commentsContainer.style.display = 'block';\n      if (toggleButton) {\n        toggleButton.textContent = 'Hide Comments';\n      }\n    }\n  };\n\n  // Function to toggle comment visibility\n  const toggleComments = recipeId => {\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\n    if (!commentsContainer || !toggleButton) {\n      console.warn('Comments container or toggle button not found');\n      return;\n    }\n    const currentDisplay = commentsContainer.style.display;\n    const recipeCommentsCount = (comments[recipeId] || []).length;\n    if (currentDisplay === 'none') {\n      commentsContainer.style.display = 'block';\n      toggleButton.textContent = 'Hide Comments';\n    } else {\n      commentsContainer.style.display = 'none';\n      toggleButton.textContent = `Show Comments (${recipeCommentsCount})`;\n    }\n  };\n  if (!recipeData || recipeData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no-recipe\",\n      children: \"No recipes found. Try adding more ingredients!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-card\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"instructions recipe-container\",\n      children: recipeData.map((recipe, index) => {\n        const recipeComments = comments[recipe.id] || [];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"recipe-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"recipe-title\",\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.title,\n            className: \"recipe-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rate this recipe:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"star-rating\",\n              children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"button\",\n                style: {\n                  display: 'inline-block',\n                  width: '30px',\n                  height: '30px',\n                  backgroundColor: '#ddd',\n                  margin: '0 2px',\n                  cursor: 'pointer'\n                }\n              }, star, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No ratings yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"recipe-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Used Ingredients: \", recipe.usedIngredientCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Missed Ingredients: \", recipe.missedIngredientCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"recipe-link\",\n                children: \"View Full Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `toggle-comments-btn-${recipe.id}`,\n              onClick: () => toggleComments(recipe.id),\n              style: {\n                width: '100%',\n                padding: '10px',\n                backgroundColor: '#f0f0f0',\n                border: 'none',\n                marginBottom: '10px'\n              },\n              children: \"Show Comments (0)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `comments-container-${recipe.id}`,\n              style: {\n                display: 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  handleCommentPost(recipe.id, e);\n                },\n                style: {\n                  display: 'flex',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Best!!\",\n                  value: commentInputs[recipe.id] || '',\n                  onChange: e => {\n                    console.log('Input changed:', e.target.value);\n                    setCommentInputs(prev => ({\n                      ...prev,\n                      [recipe.id]: e.target.value\n                    }));\n                  },\n                  style: {\n                    flex: 1,\n                    padding: '10px',\n                    marginRight: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  style: {\n                    padding: '10px',\n                    backgroundColor: '#4CAF50',\n                    color: 'white',\n                    border: 'none'\n                  },\n                  children: \"Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: recipeComments.length > 0 ? recipeComments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    border: '1px solid #e0e0e0',\n                    padding: '10px',\n                    marginBottom: '5px',\n                    borderRadius: '4px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: comment.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this)\n                }, comment.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-comments\",\n                  style: {\n                    textAlign: 'center',\n                    color: '#888'\n                  },\n                  children: \"No comments yet. Be the first to comment!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeList, \"hKj2vd9MP8PGHvdgL5e3nLem23s=\");\n_c = RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecipeList","recipeData","_s","comments","setComments","commentInputs","setCommentInputs","initialInputs","forEach","recipe","id","handleCommentPost","recipeId","event","preventDefault","commentText","console","log","currentComments","trim","warn","newComment","Date","now","text","timestamp","toLocaleString","prevComments","updatedComments","prevInputs","commentsContainer","document","querySelector","toggleButton","style","display","textContent","toggleComments","currentDisplay","recipeCommentsCount","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","recipeComments","title","src","image","alt","star","role","width","height","backgroundColor","margin","cursor","usedIngredientCount","missedIngredientCount","href","target","rel","onClick","padding","border","marginBottom","onSubmit","e","type","placeholder","value","onChange","prev","flex","marginRight","color","comment","borderRadius","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/MS USA/IIT Chicago/Build Fellowship Project 1 Real time feature/a-cookbook/client/src/reciepe.js"],"sourcesContent":["// // // reciepe.js\r\n// import React from 'react';\r\n\r\n// // RecipeList Component\r\n// export default function RecipeList({ recipeData }) {\r\n//   // if (!recipeData || recipeData.length === 0) {\r\n//   //   return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\r\n//   // }\r\n\r\n//   return (\r\n//     <div className='meal-card'>\r\n//       <ul className = 'instructions recipe-container'>\r\n//         {recipeData.map((recipe, index) => (\r\n//           <li key={index} className='recipe-item'>\r\n//             <h3 className='recipe-title'>{recipe.title}</h3>\r\n//             <img \r\n//               src={recipe.image} \r\n//               alt={recipe.title} \r\n//               className='recipe-image'\r\n//             //   style={{ width: '200px', borderRadius: '10px' }} \r\n//             />\r\n//             <ul className='recipe-details'>\r\n//               <li>Used Ingredients: {recipe.usedIngredientCount}</li>\r\n//               <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\r\n//               <li className='button-container'> \r\n//                   <a\r\n//                   href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \r\n//                   target=\"_blank\" \r\n//                   rel=\"noopener noreferrer\"\r\n//                   className='recipe-link'\r\n//                   > \r\n//                   View Full Recipe\r\n//                   </a>\r\n//               </li>\r\n//             </ul>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function RecipeList({ recipeData }) {\r\n  // State to manage comments for each recipe\r\n  const [comments, setComments] = useState({});\r\n  \r\n  // State to manage comment inputs\r\n  const [commentInputs, setCommentInputs] = useState({});\r\n\r\n  // Effect to initialize comment inputs for each recipe\r\n  useEffect(() => {\r\n    if (recipeData) {\r\n      const initialInputs = {};\r\n      recipeData.forEach(recipe => {\r\n        initialInputs[recipe.id] = '';\r\n      });\r\n      setCommentInputs(initialInputs);\r\n    }\r\n  }, [recipeData]);\r\n\r\n  // Function to handle comment posting\r\n  const handleCommentPost = (recipeId, event) => {\r\n    // Prevent default form submission\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Get the comment text\r\n    const commentText = commentInputs[recipeId];\r\n    \r\n    console.log('Attempting to post comment:', {\r\n      recipeId,\r\n      commentText,\r\n      currentComments: comments[recipeId]\r\n    });\r\n\r\n    // Validate comment\r\n    if (!commentText || !commentText.trim()) {\r\n      console.warn('Empty comment, cannot post');\r\n      return;\r\n    }\r\n\r\n    // Create new comment object\r\n    const newComment = {\r\n      id: Date.now(),\r\n      text: commentText,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n\r\n    // Update comments state\r\n    setComments(prevComments => {\r\n      const updatedComments = {\r\n        ...prevComments,\r\n        [recipeId]: [...(prevComments[recipeId] || []), newComment]\r\n      };\r\n      \r\n      console.log('Updated comments:', updatedComments);\r\n      \r\n      return updatedComments;\r\n    });\r\n\r\n    // Clear the input for this recipe\r\n    setCommentInputs(prevInputs => ({\r\n      ...prevInputs,\r\n      [recipeId]: ''\r\n    }));\r\n\r\n    // Manually show comments and update button text\r\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\r\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\r\n    \r\n    if (commentsContainer) {\r\n      commentsContainer.style.display = 'block';\r\n      if (toggleButton) {\r\n        toggleButton.textContent = 'Hide Comments';\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to toggle comment visibility\r\n  const toggleComments = (recipeId) => {\r\n    const commentsContainer = document.querySelector(`.comments-container-${recipeId}`);\r\n    const toggleButton = document.querySelector(`.toggle-comments-btn-${recipeId}`);\r\n    \r\n    if (!commentsContainer || !toggleButton) {\r\n      console.warn('Comments container or toggle button not found');\r\n      return;\r\n    }\r\n\r\n    const currentDisplay = commentsContainer.style.display;\r\n    const recipeCommentsCount = (comments[recipeId] || []).length;\r\n\r\n    if (currentDisplay === 'none') {\r\n      commentsContainer.style.display = 'block';\r\n      toggleButton.textContent = 'Hide Comments';\r\n    } else {\r\n      commentsContainer.style.display = 'none';\r\n      toggleButton.textContent = `Show Comments (${recipeCommentsCount})`;\r\n    }\r\n  };\r\n\r\n  if (!recipeData || recipeData.length === 0) {\r\n    return <h3 className='no-recipe'>No recipes found. Try adding more ingredients!</h3>;\r\n  }\r\n\r\n  return (\r\n    <div className='meal-card'>\r\n      <ul className='instructions recipe-container'>\r\n        {recipeData.map((recipe, index) => {\r\n          const recipeComments = comments[recipe.id] || [];\r\n\r\n          return (\r\n            <li key={index} className='recipe-item'>\r\n              <h3 className='recipe-title'>{recipe.title}</h3>\r\n              <img \r\n                src={recipe.image} \r\n                alt={recipe.title} \r\n                className='recipe-image'\r\n              />\r\n              \r\n              <div>\r\n                <p>Rate this recipe:</p>\r\n                <div className=\"star-rating\">\r\n                  {[1, 2, 3, 4, 5].map((star) => (\r\n                    <div \r\n                      key={star} \r\n                      role=\"button\"\r\n                      style={{\r\n                        display: 'inline-block',\r\n                        width: '30px',\r\n                        height: '30px',\r\n                        backgroundColor: '#ddd',\r\n                        margin: '0 2px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <p>No ratings yet</p>\r\n              </div>\r\n              \r\n              <ul className='recipe-details'>\r\n                <li>Used Ingredients: {recipe.usedIngredientCount}</li>\r\n                <li>Missed Ingredients: {recipe.missedIngredientCount}</li>\r\n                <li className='button-container'> \r\n                  <a\r\n                    href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className='recipe-link'\r\n                  > \r\n                    View Full Recipe\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              \r\n              <div className=\"recipe-comments-section\">\r\n                <button \r\n                  className={`toggle-comments-btn-${recipe.id}`}\r\n                  onClick={() => toggleComments(recipe.id)}\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '10px',\r\n                    backgroundColor: '#f0f0f0',\r\n                    border: 'none',\r\n                    marginBottom: '10px'\r\n                  }}\r\n                >\r\n                  Show Comments (0)\r\n                </button>\r\n                \r\n                <div \r\n                  className={`comments-container-${recipe.id}`}\r\n                  style={{ display: 'none' }}\r\n                >\r\n                  <form \r\n                    onSubmit={(e) => {\r\n                      handleCommentPost(recipe.id, e);\r\n                    }}\r\n                    style={{\r\n                      display: 'flex',\r\n                      marginBottom: '10px'\r\n                    }}\r\n                  >\r\n                    <input \r\n                      type=\"text\" \r\n                      placeholder=\"Best!!\" \r\n                      value={commentInputs[recipe.id] || ''}\r\n                      onChange={(e) => {\r\n                        console.log('Input changed:', e.target.value);\r\n                        setCommentInputs(prev => ({\r\n                          ...prev,\r\n                          [recipe.id]: e.target.value\r\n                        }));\r\n                      }}\r\n                      style={{\r\n                        flex: 1,\r\n                        padding: '10px',\r\n                        marginRight: '10px'\r\n                      }}\r\n                    />\r\n                    <button \r\n                      type=\"submit\"\r\n                      style={{\r\n                        padding: '10px',\r\n                        backgroundColor: '#4CAF50',\r\n                        color: 'white',\r\n                        border: 'none'\r\n                      }}\r\n                    >\r\n                      Post\r\n                    </button>\r\n                  </form>\r\n                  \r\n                  <div>\r\n                    {recipeComments.length > 0 ? (\r\n                      recipeComments.map((comment) => (\r\n                        <div \r\n                          key={comment.id} \r\n                          style={{\r\n                            border: '1px solid #e0e0e0',\r\n                            padding: '10px',\r\n                            marginBottom: '5px',\r\n                            borderRadius: '4px'\r\n                          }}\r\n                        >\r\n                          <p>{comment.text}</p>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p \r\n                        className=\"no-comments\"\r\n                        style={{ \r\n                          textAlign: 'center', \r\n                          color: '#888' \r\n                        }}\r\n                      >\r\n                        No comments yet. Be the first to comment!\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}